package com.nt.rest;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.nt.entity.Employee;

import com.nt.repository.IEmployeeRepo;

import com.nt.service.IEmployeeMgmtService;


@RestController
@RequestMapping("/employee")
public class EmployeeOperationsController {

	@Autowired
	private IEmployeeMgmtService service;
	
	@Autowired
	private IEmployeeRepo touristRepo;

	@PostMapping("/register")
	public ResponseEntity<String> enrollEmployee(@RequestBody Employee employee) {
		try {
			// use service
			String resultMsg = service.registerEmployee(employee);
			return new ResponseEntity<String>(resultMsg, HttpStatus.CREATED);
		} catch (Exception e) {
			return new ResponseEntity<String>("Problem in Employee enrollment", HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	@GetMapping("/getAllEmployees")
	public ResponseEntity<?> getAllEmployees() {
		try {
			List<Employee> list = service.fetchAllEmployees();
			return new ResponseEntity<List<Employee>>(list, HttpStatus.OK);
		} catch (Exception e) {
			e.printStackTrace();
			return new ResponseEntity<String>("Problem in getting Employee", HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	@GetMapping("/employees/{id}")
	public ResponseEntity<?> getEmployeeById(@PathVariable("id") Integer id) {
		try {
			Employee employee = service.fetchEmployeeById(id);
			return new ResponseEntity<Employee>(employee, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	

	@PutMapping("/modify")
	public ResponseEntity<String> modifyEmployee(@RequestBody Employee employee) {
		try {
			// use service
			String resultMsg = service.updateEmployeeDetails(employee);
			return new ResponseEntity<String>(resultMsg, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}

	

	@DeleteMapping("/delete/{id}")
	public ResponseEntity<String> deleteEmployeeById(@PathVariable("id") int id) {
		try {
            //use service
			String resultMsg = service.removeEmployeeById(id);
			return new ResponseEntity<String>(resultMsg, HttpStatus.OK);
		} catch (Exception e) {
			return new ResponseEntity<String>(e.getMessage(), HttpStatus.INTERNAL_SERVER_ERROR);
		}
	}
	

}
